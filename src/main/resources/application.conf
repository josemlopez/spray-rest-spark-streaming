akka {
    # Log the complete configuration at INFO level when the actor system is started.
    # This is useful when you are uncertain of what configuration is used.
    log-config-on-start = off
    loggers = ["akka.event.Logging$DefaultLogger"] //"akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    actor.debug {
        # enable function of LoggingReceive, which is to log any received message at DEBUG level
        receive = on
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
        autoreceive = on
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = on
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        fsm = on
        # enable DEBUG logging of subscription changes on the eventStream
        event-stream = on
    }
}

resourcesManagerActorSystem{
    bounded-mailbox {
        mailbox-type = "akka.dispatch.BoundedMailbox"
        mailbox-capacity = 10000
        mailbox-push-timeout-time = 1s
    }
    akka {
        loglevel = INFO
        actor {
            provider = "akka.remote.RemoteActorRefProvider"
            mailbox.requirements {
                "akka.dispatch.QueueBasedMessageQueue" = bounded-mailbox
            }
        }
        remote {
            enabled-transports = ["akka.remote.netty.tcp"]
            netty.tcp {
                hostname="127.0.0.1"
                port = 65430
            }
        }
        transport-failure-detector {
            heartbeat-interval = 50s # default 4s
            acceptable-heartbeat-pause = 70s # default 10s
        }
    }
}

spray.routing {
  relaxed-header-parsing = on
}